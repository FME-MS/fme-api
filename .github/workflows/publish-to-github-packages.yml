name: Generate and publish Java and TS

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - develop

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          registry-url: https://npm.pkg.github.com
          scope: '@fme-api'
          always-auth: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: 'maven'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Maven package (generate sources)
        run: mvn -B install -P generate-npm -P generate-java -DskipTests

      - name: Publish .jar file
        working-directory: .
        run: |
          mvn deploy -DskipTests

      - name: Get project version
        id: get-version
        run: |
          echo "VERSION=$(mvn help:evaluate \
            -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Publish npm packages
        working-directory: .
        run: |
          echo "Looking for generated clients in openapi-codegen/…"
          for pkg in openapi-codegen/*/; do
          pkg_name=$(basename "${pkg%/}")
            if [ -f "$pkg/package.json" ]; then
              (
              cd "$pkg"
              NAME=$(jq -r .name package.json)
              REPO=fme-api
              OWNER=${GITHUB_REPOSITORY_OWNER}
              echo "   • Publishing $NAME@$VERSION"
              cd dist
              npm publish
              )
            fi
          done
